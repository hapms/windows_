<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:w="clr-namespace:Hapoom.Windows">
    <Style x:Key="ControlBox" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxBackgroundKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxForegroundKey}}"/>
        <Setter Property="HorizontalContentAlignment"            Value="Center"/>
        <Setter Property="VerticalContentAlignment"              Value="Center"/>
        <Setter Property="SnapsToDevicePixels"                   Value="True"/>
        <Setter Property="UseLayoutRounding"                     Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode"        Value="Display"/>
        <Setter Property="IsTabStop"                             Value="False"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxForegroundMouseOverKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxBackgroundMouseOverKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxForegroundPressedKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxBackgroundPressedKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ControlBox.Minimize" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle 
                            Width="10" Height="1" 
                            StrokeThickness="0" 
                            Fill="{TemplateBinding Foreground}" 
                            VerticalAlignment="Center" 
                            Margin="0,2,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlBox.Maximize" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Width="10" Height="10" Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True" StrokeThickness="1" Fill="{TemplateBinding Background}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Normal">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="CanMinimize">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NoResize">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="ControlBox.Restore"  TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBox}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Canvas VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Rectangle Width="9" Height="9" Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True" StrokeThickness="1" Canvas.Left="-3" Canvas.Top="-5" Fill="{TemplateBinding Background}"/>
                            <Rectangle Width="9" Height="9" Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True" StrokeThickness="1" Canvas.Left="-5" Canvas.Top="-3" Fill="{TemplateBinding Background}"/>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Normal">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NoResize">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ControlBox.Close"    TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Line X1="0" Y1="0"  X2="10" Y2="10" Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Line X1="0" Y1="10" X2="10" Y2="0"  Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxForegroundMouseOverCloseKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxBackgroundMouseOverCloseKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxForegroundPressedCloseKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static w:ResourceKeys.ControlBoxBackgroundPressedCloseKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>