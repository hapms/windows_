<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:w="clr-namespace:Hapoom.Windows">
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"  Value="{DynamicResource {x:Static w:ResourceKeys.ComboBoxForegroundKey}}"/>
        <Setter Property="Background"  Value="{DynamicResource {x:Static w:ResourceKeys.ComboBoxBackgroundKey}}"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}, Path=BorderBrush}"/>
        <Setter Property="IsTabStop"   Value="False"/>
        <Setter Property="Focusable"   Value="False"/>
        <Setter Property="ClickMode"   Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}">
                        <Viewbox Width="16"
                                 Height="16"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Center"
                                 RenderTransformOrigin="0.5, 0.5">
                            <Canvas Width="24" Height="24">
                                <Path Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                                      Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                            <Viewbox.RenderTransform>
                                <RotateTransform x:Name="ChevronRotateTransform"/>
                            </Viewbox.RenderTransform>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames 
                                            Storyboard.TargetName="ChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="0"       Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-540">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuarticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames 
                                            Storyboard.TargetName="ChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="0"       Value="-540"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuarticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background"       Value="{DynamicResource {x:Static w:ResourceKeys.ComboBoxBackgroundKey}}"/>
        <Setter Property="Foreground"       Value="{DynamicResource {x:Static w:ResourceKeys.ComboBoxForegroundKey}}"/>
        <Setter Property="BorderBrush"      Value="{DynamicResource {x:Static w:ResourceKeys.ComboBoxBorderBrushKey}}"/>
        <Setter Property="BorderThickness"  Value="1"/>
        <Setter Property="FontSize"         Value="16"/>
        <Setter Property="FontWeight"       Value="Normal"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Popup Name="PART_Popup" 
                               AllowsTransparency="True" 
                               VerticalAlignment="Stretch" 
                               HorizontalAlignment="Stretch"
                               Placement="Bottom"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Name="DropDownBorder" >
                                <ScrollViewer Margin="0,5,0,0" 
                                              CanContentScroll="True" 
                                              BorderThickness="1"
                                              VerticalScrollBarVisibility="Visible"
                                              MinWidth="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                                              BorderBrush="{DynamicResource {x:Static w:ResourceKeys.ComboBoxPopupBorderBrushKey}}" 
                                              Background="{TemplateBinding Background}" 
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform x:Name="ScrollViewerTranslateTransform"/>
                                        </TransformGroup>
                                    </ScrollViewer.RenderTransform>
                                    <Border >
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </Border>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid>
                                <ToggleButton x:Name="PART_toggle"
                                    Style="{StaticResource ComboBoxToggleButton}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                                <ContentPresenter
                                    IsHitTestVisible="false"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Y" Storyboard.TargetName="ScrollViewerTranslateTransform">
                                            <EasingDoubleKeyFrame KeyTime="0"       Value="-1000"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuarticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>